#! /bin/bash
# Go/Revel server init script - Thibaut Colar.

### BEGIN INIT INFO
# Provides:       consul
# Required-Start: $network
# Required-Stop:
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description: consul
### END INIT INFO

USER="root" # User we wil run Go as
CMD="/usr/local/bin/consul agent -config-dir /etc/consul.d" # here I use revel but could just use "go"
NAME="consul" # app name for logs etc ...
LOGDIR=/var/log
PIDDIR=/tmp

###### Start script ########################################################

recursiveKill() { # Recursively kill a process and all subprocesses
    CPIDS=$(pgrep -P $1);
    for PID in $CPIDS
    do
        recursiveKill $PID
    done
    sleep 10 && kill -9 $1 2>/dev/null & # hard kill after 10 seconds
    kill $1 2>/dev/null # try soft kill first
}

recursiveReload() { # Recursively kill a process and all subprocesses
    CPIDS=$(pgrep -P $1);
    for PID in $CPIDS
    do
        recursiveReload $PID
    done
    kill -HUP $1 2>/dev/null # Reload process
}

case "$1" in
      start)
        echo "Starting $NAME ..."
        if [ -f "$PIDDIR/$NAME.pid" ]
        then
            echo "Already running according to $PIDDIR/$NAME.pid"
            exit 1
        fi
        /bin/su -m -l $USER -c "$CMD" > "$LOGDIR/$NAME.log" 2>&1 &
        PID=$!
        echo $PID > "$PIDDIR/$NAME.pid"
        echo "Started with pid $PID - Logging to $PIDDIR/$NAME.log" && exit 0
        ;;
      stop)
        echo "Stopping $NAME ..."
        if [ ! -f "$PIDDIR/$NAME.pid" ]
        then
            echo "Already stopped!"
            exit 1
        fi
        PID=`cat "$PIDDIR/$NAME.pid"`
        recursiveKill $PID
        rm -f "$PIDDIR/$NAME.pid"
        echo "stopped $NAME" && exit 0
        ;;
      restart)
        $0 stop
        sleep 1
        $0 start
        ;;
      reload)
        echo "Reloading $NAME ..."
        if [ ! -f "$PIDDIR/$NAME.pid" ]
        then
            echo "Already stopped!"
            exit 1
        fi
        PID=`cat "$PIDDIR/$NAME.pid"`
        recursiveReload $PID
        echo "reloaded $NAME" && exit 0
        ;;
      status)
        if [ -f "$PIDDIR/$NAME.pid" ]
        then
            PID=`cat "$PIDDIR/$NAME.pid"`
            if [ "$(/bin/ps --no-headers -p $PID)" ]
            then
                echo "$NAME is running (pid : $PID)" && exit 0
            else
                echo "Pid $PID found in $PIDDIR/$NAME.pid, but not running." && exit 1
            fi
        else
            echo "$NAME is NOT running" && exit 1
        fi
    ;;
      *)
      echo "Usage: /etc/init.d/$NAME {start|stop|restart|status|reload}" && exit 1
      ;;
esac

exit 0
